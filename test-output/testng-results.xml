<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="9" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-19T11:53:31 IST" name="OpenLoopSuite1" finished-at="2024-02-19T11:54:04 IST" duration-ms="32631">
    <groups>
    </groups>
    <test started-at="2024-02-19T11:53:31 IST" name="Test" finished-at="2024-02-19T11:54:04 IST" duration-ms="32631">
      <class name="api.test.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.test.LoginTest@537f60bf]" started-at="2024-02-19T11:53:31 IST" name="setup" finished-at="2024-02-19T11:53:31 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpData()[pri:0, instance:api.test.LoginTest@537f60bf]" started-at="2024-02-19T11:53:32 IST" name="setUpData" finished-at="2024-02-19T11:53:32 IST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpData -->
        <test-method signature="getToken()[pri:0, instance:api.test.LoginTest@537f60bf]" started-at="2024-02-19T11:53:32 IST" name="getToken" description="Get Token" finished-at="2024-02-19T11:53:36 IST" duration-ms="3982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="getTokenWithoutPassword()[pri:0, instance:api.test.LoginTest@537f60bf]" started-at="2024-02-19T11:53:36 IST" name="getTokenWithoutPassword" description="Veriy Token Without Passing Password" finished-at="2024-02-19T11:53:37 IST" duration-ms="1251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenWithoutPassword -->
        <test-method signature="getTokenWithoutUserName()[pri:0, instance:api.test.LoginTest@537f60bf]" started-at="2024-02-19T11:53:37 IST" name="getTokenWithoutUserName" description="Veriy Token Without Passing username" finished-at="2024-02-19T11:53:38 IST" duration-ms="1069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenWithoutUserName -->
        <test-method signature="getTokenWithoutclientId()[pri:0, instance:api.test.LoginTest@537f60bf]" started-at="2024-02-19T11:53:38 IST" name="getTokenWithoutclientId" description="Veriy Token Without Passing ClientID" finished-at="2024-02-19T11:53:39 IST" duration-ms="1134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenWithoutclientId -->
        <test-method is-config="true" signature="SendEmail()[pri:0, instance:api.test.LoginTest@537f60bf]" started-at="2024-02-19T11:54:04 IST" name="SendEmail" finished-at="2024-02-19T11:54:09 IST" duration-ms="4691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendEmail -->
      </class> <!-- api.test.LoginTest -->
      <class name="api.test.PlacePersonalizedOrderTest">
        <test-method is-config="true" signature="setUpData()[pri:0, instance:api.test.PlacePersonalizedOrderTest@791f145a]" started-at="2024-02-19T11:53:39 IST" name="setUpData" finished-at="2024-02-19T11:53:41 IST" duration-ms="1948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpData -->
        <test-method signature="placeNonPersonalizedOrder()[pri:0, instance:api.test.PlacePersonalizedOrderTest@791f145a]" started-at="2024-02-19T11:53:41 IST" name="placeNonPersonalizedOrder" description="PlacePersonalized order" finished-at="2024-02-19T11:53:56 IST" duration-ms="14791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeNonPersonalizedOrder -->
        <test-method signature="placeNonPersonalizedOrder1()[pri:0, instance:api.test.PlacePersonalizedOrderTest@791f145a]" started-at="2024-02-19T11:53:56 IST" name="placeNonPersonalizedOrder1" description="PlacePersonalized order1" finished-at="2024-02-19T11:54:04 IST" duration-ms="7620" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at api.test.PlacePersonalizedOrderTest.placeNonPersonalizedOrder1(PlacePersonalizedOrderTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeNonPersonalizedOrder1 -->
        <test-method signature="readpayload()[pri:0, instance:api.test.PlacePersonalizedOrderTest@791f145a]" started-at="2024-02-19T11:54:04 IST" name="readpayload" description="print" finished-at="2024-02-19T11:54:04 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readpayload -->
      </class> <!-- api.test.PlacePersonalizedOrderTest -->
    </test> <!-- Test -->
  </suite> <!-- OpenLoopSuite1 -->
</testng-results>
